class Solution:
    def letterCombinations(self, dig: str) -> List[str]:
        if not dig:
            return []
        
        ph = {"2": "abc", "3": "def", "4": "ghi", "5": "jkl", "6": "mno", "7": "pqrs", "8": "tuv", "9": "wxyz"}
        result = []
        
        def backtrack(comb, nxt_dig):
            if not nxt_dig:
                result.append(comb)
                return
            
            for letter in ph[nxt_dig[0]]:
                backtrack(comb + letter, nxt_dig[1:])
        
        backtrack("", dig)
        return result
